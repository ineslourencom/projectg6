#!/bin/bash
#Este ficheiro servirá para obter as listagens necessárias para que o utilizador selecione uma opção
#teremos de ter um ficheiro destes para cada listagem, no caso do resource: um para
#project store e outro para account store

#Variável para guardar a lista de projectos
TEMP_PROJECTS="/tmp/projects.tmp"

#Função erro
error_response() {
 echo "Status: 400 Bad Request"
 echo "Content-type: text/plain"
 echo ""
 echo "ERROR: ${1}"
 rm -f $TEMP_PROJECTS
exit
}

### Garante método GET
if [ "$REQUEST_METHOD" != "GET" ]; then error_response "Invalid method. The only supported method is GET."; fi

### Garante que não tem body
###if [ -n "$CONTENT_LENGTH" ]; then error_response "Too much body!"; fi

### Verifica se a string está vazia
###if [ -z "$QUERY_STRING" ]; then error_response "No query-string"; fi

### Lista de contas dentro da pasta projects
FILENAME=${QUERY_STRING#*project=}
FILE="/var/www/data/projects/$FILENAME.txt"
NAME=$(grep -o '<name>.*</name>' $FILE | sed 's/\(<name>\|<\/name>\)//g')
DESCRIPTION=$(grep -o '<description>.*</description>' $FILE | sed 's/\(<description>\|<\/description>\)//g')
CLIENT=$(grep -o '<client>.*</client>' $FILE | sed 's/\(<client>\|<\/client>\)//g')
BUSINESSSECTOR=$(grep -o '<businessector>.*</businessector>' $FILE | sed 's/\(<businessector>\|<\/businessector>\)//g')
BUDGET=$(grep -o '<budget>.*</budget>' $FILE | sed 's/\(<budget>\|<\/budget>\)//g')
TYPOLOGY=$(grep -o '<typology>.*</typology>' $FILE | sed 's/\(<typology>\|<\/typology>\)//g')
SPRINTDURATION=$(grep -o '<sprintduration>.*</sprintduration>' $FILE | sed 's/\(<sprintduration>\|<\/sprintduration>\)//g')
STARTDATE=$(grep -o '<startdate>.*</startdate>' $FILE | sed 's/\(<startdate>\|<\/startdate>\)//g')
ENDDATE=$(grep -o '<enddate>.*</enddate>' $FILE | sed 's/\(<enddate>\|<\/enddate>\)//g')
PLANNEDSPRINTS=$(grep -o '<plannedsprints>.*</plannedsprints>' $FILE | sed 's/\(<plannedsprints>\|<\/plannedsprints>\)//g')
STATUS=$(grep -o '<status>.*</status>' $FILE | sed 's/\(<status>\|<\/status>\)//g')
ID=$(echo "$FILE" | cut -d "/" -f 6 | cut -d "." -f 1)
JSON_STRING="$(jq -n \
                    --arg id "$ID" \
                    --arg name "$NAME" \
                    --arg desc "$DESCRIPTION" \
                    --arg client "$CLIENT" \
                    --arg sector "$BUSINESSSECTOR" \
                    --arg budget "$BUDGET" \
                    --arg typology "$TYPOLOGY" \
                    --arg sprintduration "$SPRINTDURATION" \
                    --arg startdate "$STARTDATE" \
                    --arg enddate "$ENDDATE" \
                    --arg plannedsprints "$PLANNEDSPRINTS" \
                    --arg status "$STATUS" \
                    '{id: $id, project: $name, description: $desc, client: $client, sector: $sector, budget: $budget, typology: $typology, sprintduration: $sprintduration, startdate: $startdate, enddate: $enddate, plannedsprints: $plannedsprints, status: $status}')"
echo "$JSON_STRING," >> $TEMP_PROJECTS

TEMP_PROJECTSFINAL=$( cat $TEMP_PROJECTS)
TEMP_PROJECTSFINALTWO=${TEMP_PROJECTSFINAL%,}
echo $TEMP_PROJECTSFINALTWO > $TEMP_PROJECTS

var="[$(<$TEMP_PROJECTS)]"
echo $var > $TEMP_PROJECTS

echo "Content-type: JSON"
echo ""
cat $TEMP_PROJECTS
rm -f $TEMP_PROJECTS